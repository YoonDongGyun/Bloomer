/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/guestBook.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { Sparkles, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useAppSelector } from "../../../redux/store.hooks";
import { useLocation, useNavigate } from "react-router-dom";

type GLTFResult = GLTF & {
  nodes: {
    Circle: THREE.Mesh;
    Circle_1: THREE.Mesh;
    Circle_2: THREE.Mesh;
  };
  materials: {
    Wood: THREE.MeshStandardMaterial;
    Yellow: THREE.MeshStandardMaterial;
    Pink: THREE.MeshStandardMaterial;
  };
};

export function GuestBookModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    `${process.env.PUBLIC_URL}/models/guestBook.glb`
  ) as GLTFResult;
  const navigate = useNavigate();

  const location = useLocation();

  let checkMine: boolean;
  if (location.pathname.length > 8) {
    if (location.pathname === "/garden/edit") {
      checkMine = true;
    } else {
      checkMine = false;
    }
  } else {
    checkMine = true;
  }

  const gardenType = useAppSelector((state) =>
    checkMine ? state.garden.gardenData.type : state.garden.otherGardenData.type
  );

  const gardenData = useAppSelector((state) =>
    checkMine ? state.garden.gardenData : state.garden.otherGardenData
  );

  const settingPosition = (
    gardenType: number | null
  ): THREE.Vector3 | undefined => {
    if (gardenType === 0) return new THREE.Vector3(2, 0, -2);
    else if (gardenType === 1) return new THREE.Vector3(-0.2, 0, -3.2);
    else if (gardenType === 2) return new THREE.Vector3(0.8, 0.5, -2.8);
  };

  const settingRotation = (
    gardenType: number | null
  ): THREE.Euler | undefined => {
    if (gardenType === 0) return new THREE.Euler(0, -Math.PI / 2, 0);
    else if (gardenType === 2) return new THREE.Euler(0, Math.PI / 2, 0);
  };

  // const position = settingPosition(gardenType);

  const handleMoveToGuestBook = () => {
    if (location.pathname !== "/garden/edit") {
      navigate("/guestbook", {
        state: {
          gardenData,
        },
      });
    }
  };

  return (
    <group {...props} dispose={null}>
      <group
        position={settingPosition(gardenType)}
        scale={1}
        rotation={settingRotation(gardenType)}
        onClick={handleMoveToGuestBook}
      >
        {/* <Sparkles count={40} scale={0.5} size={30} speed={0.4} /> */}
        <mesh geometry={nodes.Circle.geometry} material={materials.Wood} />
        <mesh geometry={nodes.Circle_1.geometry} material={materials.Yellow} />
        <mesh geometry={nodes.Circle_2.geometry} material={materials.Pink} />
      </group>
    </group>
  );
}

export default GuestBookModel;
